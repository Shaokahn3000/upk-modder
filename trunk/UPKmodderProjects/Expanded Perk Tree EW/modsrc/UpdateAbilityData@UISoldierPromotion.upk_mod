MODFILEVERSION=3
UPKFILE=XComStrategyGame.upk 
GUID=31 9C 3B 3F 9C 5D E4 40 AB AF 92 8E 25 65 74 F2  // XComStrategyGame_EW_patch1.upk
 // XComStrategyGame_EU_patch4.upk
FUNCTION=UpdateAbilityData@UISoldierPromotion

[BEFORE_HEX]
[HEADER]
75 05 00 00 DD 03 00 00 
[/HEADER]
[CODE]
// if(m_bPsiPromotion)
07 45 00 2D 01 C0 1A 00 00  

	// abilityColumns = 3
	0F 00 F8 1A 00 00 2C 03 

	// SoldierRank = m_kSoldier.GetPsiRank()
	0F 00 F7 1A 00 00 19 01 BE 1A 00 00 0A 00 C8 52 00 00 00 1B F5 12 00 00 00 00 00 00 16 

// else
06 7A 00 

	// abilityColumns = 7
	0F 00 F8 1A 00 00 2C 07 

	// SoldierRank = m_kSoldier.GetRank()
	0F 00 F7 1A 00 00 19 01 BE 1A 00 00 0A 00 C6 52 00 00 00 1B 00 13 00 00 00 00 00 00 16 

// isFirstPromotableColumn = true
14 2D 00 F5 1A 00 00 27 

// column = 0
0F 00 FB 1A 00 00 25 

// if(column < abilityColumns)
07 67 05 96 00 FB 1A 00 00 00 F8 1A 00 00 16 

	// isColumnPromotable = true
	14 2D 00 F6 1A 00 00 27 

	// Row = 0
	0F 00 FA 1A 00 00 25 

	// if(Row < 2)
	07 B4 02 96 00 FA 1A 00 00 2C 02 16 

		// if(Row > 0)
		07 18 01 97 00 FA 1A 00 00 25 16 

			if(column == 0)
			07 F3 00 9A 00 FB 1A 00 00 25 16 

				// break
				06 B4 02 

			// else
			06 18 01 

				// if((m_bPsiPromotion == false) && column == 5)
				07 18 01 82 F2 2D 01 C0 1A 00 00 28 16 18 0E 00 9A 00 FB 1A 00 00 2C 05 16 16 

					//break
					06 B4 02 

		// Perk = m_kSoldier.GetPerkInClassTree(column + 1, Row, m_bPsiPromotion)
		0F 00 F9 1A 00 00 38 3A 19 01 BE 1A 00 00 29 00 E4 52 00 00 00 1B DB 12 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 00 FA 1A 00 00 2D 01 C0 1A 00 00 16 

		// if(m_kSoldier.HasPerk(Perk) || column >= SoldierRank)
		07 B2 01 84 19 01 BE 1A 00 00 13 00 8B 53 00 00 00 1B 28 14 00 00 00 00 00 00 00 F9 1A 00 00 16 18 15 00 99 00 FB 1A 00 00 00 F7 1A 00 00 16 16 

			// isColumnPromotable = false
			14 2D 00 F6 1A 00 00 28 

		// if(column >= SoldierRank)
		07 19 02 99 00 FB 1A 00 00 00 F7 1A 00 00 16 

			// AS_SetAbilityIcon(column, Row, "unknown", m_kSoldier.HasPerk(Perk))
			1B 59 02 00 00 00 00 00 00 00 FB 1A 00 00 00 FA 1A 00 00 1F 75 6E 6B 6E 6F 77 6E 00 19 01 BE 1A 00 00 13 00 8B 53 00 00 00 1B 28 14 00 00 00 00 00 00 00 F9 1A 00 00 16 16 

		//else
		06 A6 02 

			// AS_SetAbilityIcon(column, Row, class'UIUtilities'.static.GetPerkIconLabel(Perk, GetMgr().perkMgr()), m_kSoldier.HasPerk(Perk))
			1B 59 02 00 00 00 00 00 00 00 FB 1A 00 00 00 FA 1A 00 00 12 20 6C FE FF FF 34 00 5E F9 FF FF 00 1B D9 12 00 00 00 00 00 00 00 F9 1A 00 00 19 1B 71 12 00 00 00 00 00 00 4A 16 0A 00 0C 01 00 00 00 1B D9 27 00 00 00 00 00 00 16 16 19 01 BE 1A 00 00 13 00 8B 53 00 00 00 1B 28 14 00 00 00 00 00 00 00 F9 1A 00 00 16 16 

		// ++ Row
		A3 00 FA 1A 00 00 16 

		//while loop
		06 BF 00 

	// if(isColumnPromotable)
	07 26 04 2D 00 F6 1A 00 00 

	// if(isFirstPromotableColumn)
	07 96 03 2D 00 F5 1A 00 00 

			// isFirstPromotableColumn = false
			14 2D 00 F5 1A 00 00 28 

			// GetMgr().SetAbilityTreeBranch(column + 1)
			19 1B 71 12 00 00 00 00 00 00 4A 16 16 00 00 00 00 00 00 1B 58 2A 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 16 

			// AS_SetColumnData(column, Caps(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.GetRankString(column + 1)), 1)
			1B 72 02 00 00 00 00 00 00 00 FB 1A 00 00 EB 19 19 2E 5C FE FF FF 19 12 20 CD FE FF FF 0A 00 A8 FA FF FF 00 1C 49 FD FF FF 16 09 00 91 FA FF FF 00 01 91 FA FF FF 09 00 60 FA FF FF 00 01 60 FA FF FF 18 00 1B F9 FF FF 00 1B 02 13 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 4A 4A 16 16 26 16 

		//else
		06 23 04 

			// AS_SetColumnData(column, Caps(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.GetRankString(column + 1)), 2)
			1B 72 02 00 00 00 00 00 00 00 FB 1A 00 00 EB 19 19 2E 5C FE FF FF 19 12 20 CD FE FF FF 0A 00 A8 FA FF FF 00 1C 49 FD FF FF 16 09 00 91 FA FF FF 00 01 91 FA FF FF 09 00 60 FA FF FF 00 01 60 FA FF FF 18 00 1B F9 FF FF 00 1B 02 13 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 4A 4A 16 16 2C 02 16 

	//else
	06 59 05 

		// if(column >= SoldierRank)
		07 CD 04 99 00 FB 1A 00 00 00 F7 1A 00 00 16 

			// AS_SetColumnData(column, Caps(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.GetRankString(column + 1)), 3)
			1B 72 02 00 00 00 00 00 00 00 FB 1A 00 00 EB 19 19 2E 5C FE FF FF 19 12 20 CD FE FF FF 0A 00 A8 FA FF FF 00 1C 49 FD FF FF 16 09 00 91 FA FF FF 00 01 91 FA FF FF 09 00 60 FA FF FF 00 01 60 FA FF FF 18 00 1B F9 FF FF 00 1B 02 13 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 4A 4A 16 16 2C 03 16 

		// else
		06 59 05 

			// AS_SetColumnData(column, Caps(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.GetRankString(column + 1)), 0)
			1B 72 02 00 00 00 00 00 00 00 FB 1A 00 00 EB 19 19 2E 5C FE FF FF 19 12 20 CD FE FF FF 0A 00 A8 FA FF FF 00 1C 49 FD FF FF 16 09 00 91 FA FF FF 00 01 91 FA FF FF 09 00 60 FA FF FF 00 01 60 FA FF FF 18 00 1B F9 FF FF 00 1B 02 13 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 4A 4A 16 16 25 16 

	// ++ column
	A3 00 FB 1A 00 00 16 

	// while loop
	06 91 00 

// RealizeSelected()
1C FE 1A 00 00 4A 16 

// return
04 0B 

// EOS
53 	

[/CODE]
[/BEFORE_HEX]


[AFTER_HEX]
[HEADER]
E1 04 00 00 DD 03 00 00 
[/HEADER]
[CODE]
// if(m_bPsiPromotion)
07 45 00 2D 01 C0 1A 00 00 

	// abilityColumns = 3
	0F 00 F8 1A 00 00 2C 03 

	// SoldierRank = m_kSoldier.GetPsiRank()
	0F 00 F7 1A 00 00 19 01 BE 1A 00 00 0A 00 C8 52 00 00 00 1B F5 12 00 00 00 00 00 00 16 

// else
06 7A 00 

	// abilityColumns = 7
	0F 00 F8 1A 00 00 2C 07 

	// SoldierRank = m_kSoldier.GetRank()
	0F 00 F7 1A 00 00 19 01 BE 1A 00 00 0A 00 C6 52 00 00 00 1B 00 13 00 00 00 00 00 00 16 

// isFirstPromotableColumn = true
14 2D 00 F5 1A 00 00 27 

// column = 0
0F 00 FB 1A 00 00 25 

// if(column < 7)
07 6B 03 96 00 FB 1A 00 00 2C 07 16 

	// if(column >= SoldierRank)
	07 D3 00 99 00 FB 1A 00 00 00 F7 1A 00 00 16  

		// Row = 3
		0F 00 FA 1A 00 00 2C 03 

		// isFirstPromotableColumn = false
		14 2D 00 F5 1A 00 00 28 

	//else
	06 C9 02 

		// Row = 0
		0F 00 FA 1A 00 00 2C 00 

		// isColumnPromotable = true
		14 2D 00 F6 1A 00 00 27 

		// if(Row < 3)  //increase to 3 to allow up to 3 perks per rank
		07 4D 02 96 00 FA 1A 00 00 2C 03 16 

			// Perk = m_kSoldier.GetPerkInClassTree(column + 1, Row, m_bPsiPromotion) // get perk -- can be zero, which means display no icon
			0F 00 F9 1A 00 00 38 3A 19 01 BE 1A 00 00 29 00 E4 52 00 00 00 1B DB 12 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 00 FA 1A 00 00 2D 01 C0 1A 00 00 16 

			// if(m_kSoldier.HasPerk(Perk) || column >= SoldierRank)
			07 95 01 84 19 01 BE 1A 00 00 13 00 8B 53 00 00 00 1B 28 14 00 00 00 00 00 00 00 F9 1A 00 00 16 18 15 00 99 00 FB 1A 00 00 00 F7 1A 00 00 16 16 

				// isColumnPromotable = false
				14 2D 00 F6 1A 00 00 28 

			// if (isFirstPromotableColumn)
			07 3F 02 2D 00 F5 1A 00 00 

				// if(Perk > 0)
				07 3F 02 97 00 F9 1A 00 00 2C 00 16 

					// AS_SetAbilityIcon(column, Row, class'UIUtilities'.static.GetPerkIconLabel(Perk, GetMgr().perkMgr()), m_kSoldier.HasPerk(Perk))
					1B 59 02 00 00 00 00 00 00 00 FB 1A 00 00 00 FA 1A 00 00 12 20 6C FE FF FF 34 00 5E F9 FF FF 00 1B D9 12 00 00 00 00 00 00 00 F9 1A 00 00 19 1B 71 12 00 00 00 00 00 00 4A 16 0A 00 0C 01 00 00 00 1B D9 27 00 00 00 00 00 00 16 16 19 01 BE 1A 00 00 13 00 8B 53 00 00 00 1B 28 14 00 00 00 00 00 00 00 F9 1A 00 00 16 16 

			// ++ Row
			A3 00 FA 1A 00 00 16 

			//while loop
			06 EB 00 

		// if(isColumnPromotable)
		07 BD 02 2D 00 F6 1A 00 00 

			// if(isFirstPromotableColumn)
			07 AE 02 2D 00 F5 1A 00 00 

				// mode 1 -- column is highlighted and active
				// Row = 1;
				0F 00 FA 1A 00 00 26 

				// isFirstPromotableColumn = false
				14 2D 00 F5 1A 00 00 28 

				// GetMgr().SetAbilityTreeBranch(column + 1)
				19 1B 71 12 00 00 00 00 00 00 4A 16 16 00 00 00 00 00 00 1B 58 2A 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 16 

			//else
			06 BA 02 

				// mode 2 -- column is faded and inactive
				// Row = 2;
				0F 00 FA 1A 00 00 2C 02 

		//else
		06 C9 02 

			// mode 0 -- column has been promoted -- column highlighting is off
			// Row = 0;
			0F 00 FA 1A 00 00 2C 00 

	// AS_SetColumnData(column, Caps(XComGameReplicationInfo(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kGameCore.GetRankString(column + 1)), Row)
	1B 72 02 00 00 00 00 00 00 00 FB 1A 00 00 EB 19 19 2E 5C FE FF FF 19 12 20 CD FE FF FF 0A 00 A8 FA FF FF 00 1C 49 FD FF FF 16 09 00 91 FA FF FF 00 01 91 FA FF FF 09 00 60 FA FF FF 00 01 60 FA FF FF 18 00 1B F9 FF FF 00 1B 02 13 00 00 00 00 00 00 92 00 FB 1A 00 00 26 16 4A 4A 16 16 00 FA 1A 00 00 16 

	// ++ column
	A3 00 FB 1A 00 00 16 

	// while loop
	06 91 00 

// RealizeSelected()
1C FE 1A 00 00 4A 16 

// return
04 0B 

// null ops
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B  

// null ops
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B  

// null ops
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B  

//null ops
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 

// EOS
53 	

[/CODE]
[/AFTER_HEX]

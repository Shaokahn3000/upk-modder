MODFILEVERSION=4
UPKFILE=XComGame.upk 
GUID=5B 06 B8 18 67 22 12 44 85 9B A8 5B 9D 57 1D 4B // XComGame_EW_patch1.upk
FUNCTION=DebugAnims@XGUnit

// helper function used to set alien leader and navigator information

[BEFORE_HEX]
[HEADER]
74 0F 00 00 88 0A 00 00 
[/HEADER]
[CODE]
//bAdd = true
14 2D 00 D0 C8 00 00 27 

//iMirror = 0
0F 00 CF C8 00 00 25 

//bSingleUnitDebugging = kCheatManager.m_DebugAnims_UnitName == self.Name
14 2D 00 CC C8 00 00 FE 19 00 D4 C8 00 00 09 00 16 7B 00 00 00 01 16 7B 00 00 19 17 09 00 D3 F9 FF FF 00 01 D3 F9 FF FF 16 

//if(((m_kPawn != none) && kCheatManager.bDebugAnims) && (kCheatManager.m_DebugAnims_UnitName == 'None') || bSingleUnitDebugging)
07 71 0F 82 82 77 01 34 3A 00 00 2A 16 18 20 00 19 00 D4 C8 00 00 0A 00 4F 7B 00 00 00 2D 01 4F 7B 00 00 16 18 39 00 84 FE 19 00 D4 C8 00 00 09 00 16 7B 00 00 00 01 16 7B 00 00 21 76 5F 00 00 00 00 00 00 16 18 0B 00 2D 00 CC C8 00 00 16 16 

//vScreenPos = kCanvas.Project(Location)
0F 00 CB C8 00 00 19 00 D5 C8 00 00 13 00 8F F8 FF FF 00 1C F4 FB FF FF 01 9E F8 FF FF 16 

//if(IsStrangling())
07 4E 01 1B AD 45 00 00 00 00 00 00 16 

//vScreenPos.Y -= float(200)
B9 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 38 3F 2C C8 16 

//vScreenPos.X += float(80)
B8 35 14 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 38 3F 2C 50 16 

//goto J0x19F
06 9F 01 

//if(IsStrangled())
07 9F 01 1B AC 45 00 00 00 00 00 00 16 

//vScreenPos.Y += float(200)
B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 38 3F 2C C8 16 

//vScreenPos.X -= float(80)
B9 35 14 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 38 3F 2C 50 16 

//kCanvas.SetDrawColor(255, 255, 255)
19 00 D5 C8 00 00 11 00 00 00 00 00 00 1C F3 FB FF FF 24 FF 24 FF 24 FF 4A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText(string(self.Name))
19 00 D5 C8 00 00 26 00 00 00 00 00 00 1C F6 FB FF FF 38 57 19 17 09 00 D3 F9 FF FF 00 01 D3 F9 FF FF 4A 4A 4A 4A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText("CurrAction:" @ string(m_kCurrAction))
19 00 D5 C8 00 00 28 00 00 00 00 00 00 1C F6 FB FF FF A8 1F 43 75 72 72 41 63 74 69 6F 6E 3A 00 38 56 01 F8 39 00 00 16 4A 4A 4A 4A 16 

//if(IsMine())
07 31 03 1B 1D 45 00 00 00 00 00 00 16 

//kCanvas.SetDrawColor(150, 255, 150)
19 00 D5 C8 00 00 11 00 00 00 00 00 00 1C F3 FB FF FF 24 96 24 FF 24 96 4A 16 

//goto J0x357
06 57 03 

//kCanvas.SetDrawColor(255, 150, 150)
19 00 D5 C8 00 00 11 00 00 00 00 00 00 1C F3 FB FF FF 24 FF 24 96 24 96 4A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText((("Location:" @ string(m_kPawn.Location)) @ "Rotation:") @ string(m_kPawn.Rotation))
19 00 D5 C8 00 00 6A 00 00 00 00 00 00 1C F6 FB FF FF A8 A8 A8 1F 4C 6F 63 61 74 69 6F 6E 3A 00 38 58 19 01 34 3A 00 00 09 00 9E F8 FF FF 00 01 9E F8 FF FF 16 1F 52 6F 74 61 74 69 6F 6E 3A 00 16 38 59 19 01 34 3A 00 00 09 00 9B F8 FF FF 00 01 9B F8 FF FF 16 4A 4A 4A 4A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText("State:" @ string(GetStateName()))
19 00 D5 C8 00 00 1D 00 00 00 00 00 00 1C F6 FB FF FF A8 1F 53 74 61 74 65 3A 00 38 57 61 1C 16 16 4A 4A 4A 4A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText((((("Physics:" @ string(m_kPawn.Physics)) @ "PhysWeight:") @ string(m_kPawn.Mesh.PhysicsWeight)) @ "Motor:") @ string(XComUnitPawn(m_kPawn).fPhysicsMotorForce))
19 00 D5 C8 00 00 B5 00 00 00 00 00 00 1C F6 FB FF FF A8 A8 A8 A8 A8 1F 50 68 79 73 69 63 73 3A 00 38 52 19 01 34 3A 00 00 09 00 A8 FE FF FF 00 01 A8 FE FF FF 16 1F 50 68 79 73 57 65 69 67 68 74 3A 00 16 38 55 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 C3 FC FF FF 00 01 C3 FC FF FF 16 1F 4D 6F 74 6F 72 3A 00 16 38 55 19 2E 13 3F 00 00 01 34 3A 00 00 09 00 FB 3C 00 00 00 01 FB 3C 00 00 16 4A 4A 4A 4A 16 

//kCanvas.SetDrawColor(255, 255, 255)
19 00 D5 C8 00 00 11 00 00 00 00 00 00 1C F3 FB FF FF 24 FF 24 FF 24 FF 4A 16 

//if((m_kPawn.MovementNode != none) && m_kPawn.ActionNode != none)
07 71 0F 82 77 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 2A 16 18 22 00 77 19 01 34 3A 00 00 09 00 C9 3B 00 00 00 01 C9 3B 00 00 2A 16 16 

//if((m_kPawn.MirrorNode != none) && m_kPawn.MirrorNode.bEnableMirroring)
07 CA 06 82 77 19 01 34 3A 00 00 09 00 C8 3B 00 00 00 01 C8 3B 00 00 2A 16 18 35 00 19 19 01 34 3A 00 00 09 00 C8 3B 00 00 00 01 C8 3B 00 00 0A 00 9C FF FF FF 00 2D 01 9C FF FF FF 16 

//iMirror = 1
0F 00 CF C8 00 00 26 

//goto J0x6D5
06 D5 06 

//iMirror = 0
0F 00 CF C8 00 00 25 

//kSeq = m_kPawn.MovementNode.GetTerminalSequence()
0F 00 CA C8 00 00 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 0A 00 AE F9 FF FF 00 1B 70 3B 00 00 00 00 00 00 16 

//if(kSeq != none)
07 3F 08 77 00 CA C8 00 00 2A 16 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText((((("bPlaying=" $ string(kSeq.bPlaying)) @ "Current Anim Time:") @ "(") $ string(kSeq.CurrentTime)) $ ")")
19 00 D5 C8 00 00 7E 00 00 00 00 00 00 1C F6 FB FF FF 70 70 A8 A8 70 1F 62 50 6C 61 79 69 6E 67 3D 00 38 54 19 00 CA C8 00 00 0A 00 9A FF FF FF 00 2D 01 9A FF FF FF 16 1F 43 75 72 72 65 6E 74 20 41 6E 69 6D 20 54 69 6D 65 3A 00 16 1F 28 00 16 38 55 19 00 CA C8 00 00 09 00 03 FD FF FF 00 01 03 FD FF FF 16 1F 29 00 16 4A 4A 4A 4A 16 

//AnimSeqName = kSeq.AnimSeqName
0F 00 CD C8 00 00 19 00 CA C8 00 00 09 00 CD F9 FF FF 00 01 CD F9 FF FF 

//goto J0x852
06 52 08 

//AnimSeqName = 'Unknown'
0F 00 CD C8 00 00 21 E4 79 00 00 00 00 00 00 

//if((kSeq != none) && kSeq.AnimSeq != none)
07 DC 08 82 77 00 CA C8 00 00 2A 16 18 22 00 77 19 00 CA C8 00 00 09 00 AD F9 FF FF 00 01 AD F9 FF FF 2A 16 16 

//currentAnimsetName = kSeq.AnimSeq.Outer.Name
0F 00 D1 C8 00 00 19 19 19 00 CA C8 00 00 09 00 AD F9 FF FF 00 01 AD F9 FF FF 09 00 BF F9 FF FF 00 01 BF F9 FF FF 09 00 D3 F9 FF FF 00 01 D3 F9 FF FF 

//goto J0x8EF
06 EF 08 

//currentAnimsetName = 'Unknown'
0F 00 D1 C8 00 00 21 E4 79 00 00 00 00 00 00 

//if((m_kPawn.Mesh.RootMotionMode != 2) || m_kPawn.Mesh.RootMotionRotationMode != 0)
07 FB 09 84 9B 38 3A 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 95 FE FF FF 00 01 95 FE FF FF 38 3A 24 02 16 18 3C 00 9B 38 3A 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 94 FE FF FF 00 01 94 FE FF FF 38 3A 24 00 16 16 

//rootMotionData = ((("RM [" $ string(m_kPawn.Mesh.RootMotionMode)) $ "] RMR [") $ string(m_kPawn.Mesh.RootMotionRotationMode)) $ "]"
0F 00 D2 C8 00 00 70 70 70 70 1F 52 4D 20 5B 00 38 52 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 95 FE FF FF 00 01 95 FE FF FF 16 1F 5D 20 52 4D 52 20 5B 00 16 38 52 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 94 FE FF FF 00 01 94 FE FF FF 16 1F 5D 00 16 

//if(m_kPawn.MovementNode.ActiveChildIndex != 4)
07 FA 0A 9B 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 2C 04 16 

//Data = (((((((("(" $ string(m_kPawn.Mesh.AnimSets.Length)) $ ":") $ string(currentAnimsetName)) $ ")") @ string(m_kPawn.MovementNode.ActiveChildIndex + 1)) @ "Mr:") @ string(iMirror)) @ rootMotionData) @ string(AnimSeqName)
0F 00 D3 C8 00 00 A8 A8 A8 A8 A8 70 70 70 70 1F 28 00 38 53 36 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 D2 FF FF FF 00 01 D2 FF FF FF 16 1F 3A 00 16 38 57 00 D1 C8 00 00 16 1F 29 00 16 38 53 92 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 26 16 16 1F 4D 72 3A 00 16 38 53 00 CF C8 00 00 16 00 D2 C8 00 00 16 38 57 00 CD C8 00 00 16 

//goto J0xD87
06 87 0D 

//if((m_kPawn.MovementNode.ActiveChildIndex == 4) && m_kPawn.ActionNode.ActiveChildIndex != 13)
07 6F 0C 82 9A 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 2C 04 16 18 38 00 9B 19 19 01 34 3A 00 00 09 00 C9 3B 00 00 00 01 C9 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 2C 0D 16 16 

//Data = ((((((((("(" $ string(m_kPawn.Mesh.AnimSets.Length)) $ ":") $ string(currentAnimsetName)) $ ")") @ string(m_kPawn.MovementNode.ActiveChildIndex + 1)) @ string(m_kPawn.ActionNode.ActiveChildIndex + 1)) @ "Mr:") @ string(iMirror)) @ rootMotionData) @ string(AnimSeqName)
0F 00 D3 C8 00 00 A8 A8 A8 A8 A8 A8 70 70 70 70 1F 28 00 38 53 36 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 D2 FF FF FF 00 01 D2 FF FF FF 16 1F 3A 00 16 38 57 00 D1 C8 00 00 16 1F 29 00 16 38 53 92 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 26 16 16 38 53 92 19 19 01 34 3A 00 00 09 00 C9 3B 00 00 00 01 C9 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 26 16 16 1F 4D 72 3A 00 16 38 53 00 CF C8 00 00 16 00 D2 C8 00 00 16 38 57 00 CD C8 00 00 16 

//goto J0xD87
06 87 0D 

//Data = (((((((((("(" $ string(m_kPawn.Mesh.AnimSets.Length)) $ ":") $ string(currentAnimsetName)) $ ")") @ string(m_kPawn.MovementNode.ActiveChildIndex + 1)) @ string(m_kPawn.ActionNode.ActiveChildIndex + 1)) @ "Mr:") @ string(iMirror)) @ rootMotionData) @ string(IdleStateMachine.GetStateName())) @ string(AnimSeqName)
0F 00 D3 C8 00 00 A8 A8 A8 A8 A8 A8 A8 70 70 70 70 1F 28 00 38 53 36 19 19 01 34 3A 00 00 09 00 4C FD FF FF 00 01 4C FD FF FF 09 00 D2 FF FF FF 00 01 D2 FF FF FF 16 1F 3A 00 16 38 57 00 D1 C8 00 00 16 1F 29 00 16 38 53 92 19 19 01 34 3A 00 00 09 00 CC 3B 00 00 00 01 CC 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 26 16 16 38 53 92 19 19 01 34 3A 00 00 09 00 C9 3B 00 00 00 01 C9 3B 00 00 09 00 0A FA FF FF 00 01 0A FA FF FF 26 16 16 1F 4D 72 3A 00 16 38 53 00 CF C8 00 00 16 00 D2 C8 00 00 16 38 57 19 01 A4 39 00 00 03 00 D4 F9 FF FF 00 61 1C 16 16 38 57 00 CD C8 00 00 16 

//if(m_arrLastPlayedAnims.Length > 0)
07 16 0E 97 36 01 B5 C2 00 00 25 16 

//Offset = InStr(m_arrLastPlayedAnims[m_arrLastPlayedAnims.Length - 1], "]")
0F 00 CE C8 00 00 7E 10 93 36 01 B5 C2 00 00 26 16 01 B5 C2 00 00 1F 5D 00 4A 4A 4A 16 

//if((Offset != -1) && Mid(m_arrLastPlayedAnims[m_arrLastPlayedAnims.Length - 1], Offset + 2) == Data)
07 16 0E 82 9B 00 CE C8 00 00 1D FF FF FF FF 16 18 33 00 7A 7F 10 93 36 01 B5 C2 00 00 26 16 01 B5 C2 00 00 92 00 CE C8 00 00 2C 02 16 4A 16 00 D3 C8 00 00 16 16 

//bAdd = false
14 2D 00 D0 C8 00 00 28 

//if(bAdd)
07 AB 0E 2D 00 D0 C8 00 00 

//if(m_arrLastPlayedAnims.Length > 20)
07 41 0E 97 36 01 B5 C2 00 00 2C 14 16 

//m_arrLastPlayedAnims.Remove(0, 1)
40 01 B5 C2 00 00 25 26 16 

//m_arrLastPlayedAnims.AddItem((("[" $ string(++ LastPlayedAnimCounter)) $ "]") @ Data)
55 01 B5 C2 00 00 23 00 A8 70 70 1F 5B 00 38 53 A5 01 B4 C2 00 00 16 16 1F 5D 00 16 00 D3 C8 00 00 16 16 

//if(LastPlayedAnimCounter > 1000)
07 8E 0E 97 01 B4 C2 00 00 1D E8 03 00 00 16 

//LastPlayedAnimCounter = 0
0F 01 B4 C2 00 00 25 

//if(bSingleUnitDebugging)
07 AB 0E 2D 00 CC C8 00 00 

//if(rootMotionData != "")
07 AB 0E 7B 00 D2 C8 00 00 1F 00 16 

//if(kCheatManager.bDisplayAnims)
07 71 0F 19 00 D4 C8 00 00 0A 00 4E 7B 00 00 00 2D 01 4E 7B 00 00 

//foreach m_arrLastPlayedAnims(Data,)
58 01 B5 C2 00 00 00 D3 C8 00 00 00 4A 70 0F 

//kCanvas.SetPos(vScreenPos.X, vScreenPos.Y += 15.0)
19 00 D5 C8 00 00 4A 00 00 00 00 00 00 1C F2 FB FF FF 35 14 FD FF FF 20 F9 FF FF 00 00 00 CB C8 00 00 B8 35 13 FD FF FF 20 F9 FF FF 00 01 00 CB C8 00 00 1E 00 00 70 41 16 4A 16 

//kCanvas.DrawText(Data)
19 00 D5 C8 00 00 17 00 00 00 00 00 00 1C F6 FB FF FF 00 D3 C8 00 00 4A 4A 4A 4A 16 

//IN
31 

//IP
30 
	
//return
04 0B 

//EOS
53 	
[/CODE]
[/BEFORE_HEX]


// uses BalanceMods_Hard to configure and upgrade alien leaders and navigators
// local vars / params
//local bool bAdd -- 	2D 00 D0 C8 00 00 
//local int iMirror -- 	 00 CF C8 00 00 
//local int Offset -- 	 00 CE C8 00 00 
//parameter int kCanvas -- 	 00 D5 C8 00 00 (separate mod to change this type)

// local CharacterBalance It -- 00 A5 84 00 00    	(taken from XGTacticalGameCore.GetCharacterBalanceMods
// local float savedX --   	 00 EF 3E 00 00      (taken from XComUnitPawn.DebugVis
// stat definitions:
// 	iCritHit -- low 2 digits hold leader level/navigator chance (if <10 is leader level, if >= 10 is % chance for navigator upgrade)
//	iHP, iAim, iDamage, iWill -- normal stat upgrades
// 	iMobility -- perk ID to grant
//	iDefense -- unit scaling information 100 = 1.00 scaling.
//		scaling is multiplicatively cumulative
//		120 and 120 combines to ~= 1.20 * 1.20 = 1.44 x larger

[AFTER_HEX]
[HEADER]
18 0C 00 00 88 0A 00 00 
[/HEADER]
[CODE]

//iMirror = 0  // used to store sizing info
0F 00 CF C8 00 00 2C 00 

// Offset = 0
0F 00 CE C8 00 00 2C 00 

// if (Offset < class'XGTacticalGameCore'.default.BalanceMods_Hard.length)
07 36 04 96 00 CE C8 00 00 36 12 20 17 85 00 00 09 00 0C 12 00 00 00 02 0C 12 00 00 16 

	// It = class'XGTacticalGameCore'.default.BalanceMods_Hard[Offset]
	0F 00 A5 84 00 00 10 00 CE C8 00 00 12 20 17 85 00 00 09 00 0C 12 00 00 00 02 0C 12 00 00 

	// if (It.eType == GetCharacter().m_kChar.iType)
	07 28 04 9A 38 3A 35 D4 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 35 56 0F 00 00 58 0F 00 00 00 00 19 1B 8F 37 00 00 00 00 00 00 16 09 00 E8 B5 00 00 00 01 E8 B5 00 00 16 

		//if((It.iCritHit/100) < XComTacticalGRI(class'Engine'.static.GetCurrentWorldInfo().GRI).m_kBattle.STAT_GetStat(1))
		07 28 04 96 91 35 D2 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 2C 64 16 19 19 2E BD 32 00 00 19 12 20 36 FE FF FF 0A 00 9E F9 FF FF 00 1C DE FB FF FF 16 09 00 5C F9 FF FF 00 01 5C F9 FF FF 09 00 C9 32 00 00 00 01 C9 32 00 00 0C 00 06 B0 00 00 00 1B 0F 73 00 00 00 00 00 00 2C 01 16 16 

			//if((kCanvas >= It.iCritHit % 100) || ((((It.iCritHit % 100) >= 10) && (Rand(100) < (It.iCritHit % 100)))) // combined leader and navigator upgrade checks
			07 28 04 84 99 00 D5 C8 00 00 FD 35 D2 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 2C 64 16 16 18 50 00 82 99 FD 35 D2 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 2C 64 16 2C 0A 16 18 26 00 96 A7 2C 64 16 FD 35 D2 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 2C 64 16 16 16 16 

				//m_kCharacter.m_kChar.aStats[0] += It.iHP;
				A1 1A 2C 00 35 51 0F 00 00 58 0F 00 00 00 00 19 01 35 3A 00 00 09 00 E8 B5 00 00 00 01 E8 B5 00 00 35 CF 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//SetUnitHP(GetUnitMaxHP());
				1B 87 6E 00 00 00 00 00 00 1B A9 3B 00 00 00 00 00 00 16 16 

				//m_kCharacter.m_kChar.aStats[2] += It.iAim;
				A1 1A 2C 02 35 51 0F 00 00 58 0F 00 00 00 00 19 01 35 3A 00 00 09 00 E8 B5 00 00 00 01 E8 B5 00 00 35 D1 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//m_aCurrentStats[2] += It.iAim;
				A1 1A 2C 02 01 38 3A 00 00 35 D1 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//m_kCharacter.m_kChar.aStats[12] += It.iDamage;
				A1 1A 2C 0C 35 51 0F 00 00 58 0F 00 00 00 00 19 01 35 3A 00 00 09 00 E8 B5 00 00 00 01 E8 B5 00 00 35 D3 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//m_aCurrentStats[12] += It.iDamage;
				A1 1A 2C 0C 01 38 3A 00 00 35 D3 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//m_kCharacter.m_kChar.aStats[7] += It.iWill;
				A1 1A 2C 07 35 51 0F 00 00 58 0F 00 00 00 00 19 01 35 3A 00 00 09 00 E8 B5 00 00 00 01 E8 B5 00 00 35 CD 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//m_aCurrentStats[7] += It.iWill;
				A1 1A 2C 07 01 38 3A 00 00 35 CD 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//GetCharacter.GivePerk(It.Mobility)
				19 1B 8F 37 00 00 00 00 00 00 16 26 00 00 00 00 00 00 1B 36 3C 00 00 00 00 00 00 35 CE 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 

				//iMirror = ((iMirror * It.Defense) / 100) adjust scaling info
				0F 00 CF C8 00 00 91 90 00 CF C8 00 00 35 D0 0F 00 00 D5 0F 00 00 00 00 00 A5 84 00 00 16 2C 64 16 

	// Offset++
	A3 00 CE C8 00 00 16 

	// loop while 
	06 18 00 

//foreach ComponentList(class'MeshComponent', MeshComp)
2F 1C 66 FC FF FF 20 01 FE FF FF 00 46 3E 00 00 16 86 04 

	//MeshComp.SetScale(((float) iMirror) / float(100))
	19 00 46 3E 00 00 0F 00 00 00 00 00 00 1B FE 6D 00 00 00 00 00 00 AC 38 3F 00 CF C8 00 00 38 3F 2C 64 16 16 

	//IN
	31 

	//IP
	30 	

/ return 
04 0B 

// null ops 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 
0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 0B 

// endofscript
53 

[/CODE]
[/AFTER_HEX]
Alerts

InXComHQPresentationLayer
reliable client simulated function UIAlertBox(string _titleMsg, string _bodyMsg, string _dialogueMsg, optional UIAlert.EUIAlertType _type, optional float _x, optional float _y, optional bool _isCentered)

XGGeoscape.Alert adds an alert to m_arrAlerts -- this appears to be set up as a watched variable so that alerts are added automatically when added to the array

XGGeoscape.MakeAlert simply dumps data into the alert structure:
function TGeoscapeAlert MakeAlert(XGStrategyActor.EGeoscapeAlert eAlert, optional int iData1, optional int iData2, optional int iData3, optional int iData4)
{
    local TGeoscapeAlert kAlert;

    kAlert.eType = eAlert;
    kAlert.arrData.AddItem(iData1);
    kAlert.arrData.AddItem(iData2);
    kAlert.arrData.AddItem(iData3);
    kAlert.arrData.AddItem(iData4);
    return kAlert;
    //return ReturnValue;    
	
	
base mission alert: 	Alert(MakeAlert(8, kMission.m_iID));
crashed UFO alert : 	Alert(MakeAlert(4, kMission.m_iID));
Terror alert : 			Alert(MakeAlert(2, kMission.m_iID));
Landed UFO alert : 		Alert(MakeAlert(6, kMission.m_iID));
Abduction alert :		Alert(MakeAlert(1, kMission.m_iID));
Final misson alert : 	Alert(MakeAlert(9, kMission.m_iID));
mission expired? : 		Alert(MakeAlert(10));
skyrange arrival alert:	Alert(MakeAlert(7, iSkyrangerIndex));
UFO detected alert : 	Alert(MakeAlert(0, iUFO));
Landed UFO alter : 		Alert(MakeAlert(6, kMission.m_iID));
Council meeting alert:	Alert(MakeAlert(38));


All type of enum EGeoscapeAlert